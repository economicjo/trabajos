image: docker:latest
services:
  - docker:dind

stages:
  - test
  - sc-analysis
  - build
  - deploy
  

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"

SonarCloud static code analysis:
  stage: sc-analysis
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  needs: []
  dependencies: []
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
    SONAR_TOKEN: $SONAR_TOKEN_FRONTEND
  cache:
    key: "${CI_PROJECT_NAME}-frontend-${CI_JOB_NAME}"
    paths:
      - frontend/.sonar/cache
  script:
    - sonar-scanner -Dsonar.projectVersion=$(date +%s)

Build and upload image to registry:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  dependencies: []
  needs: []
  before_script:
    - apk add --no-cache bash
  variables:
    AWS_ECR_FULL_URI: $AWS_ECR_URI/$AWS_ECR_FRONTEND_REPOSITORY_NAME
  secrets:
    AWS_ACCESS_KEY_ID:
      vault: build/aws/dev-account/aws-access-key-id@ci
      file: false
    AWS_SECRET_ACCESS_KEY:
      vault: build/aws/dev-account/aws-secret-access-key@ci
      file: false
  script:
    - bash build.sh build-ci ${CI_COMMIT_SHORT_SHA}
    - docker tag ${AWS_ECR_FULL_URI}:${CI_COMMIT_SHORT_SHA} ${AWS_ECR_FULL_URI}:latest
    - docker run -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --rm amazon/aws-cli ecr get-login-password --region eu-central-1 | docker login -u AWS --password-stdin $AWS_ECR_FULL_URI
    - docker push --all-tags $AWS_ECR_FULL_URI

Deploy to kubernetes:
  stage: deploy
  image: $CI_REGISTRY/21.financeag/sw-development/infrastructure/cli-tools:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  dependencies: []
  needs: ["Build and upload image to registry"]
  variables:
    AWS_ACCOUNT_ID: $AWS_EKS_ACCOUNT_ID
    AWS_ACCOUNT_ROLE_NAME: $AWS_EKS_ACCOUNT_ROLE_NAME
    INGRESS_ANNOTATIONS_GROUP_NAME: 21f-maas-marketplace-public-lb
    FRONTEND_IMAGE_TAG: latest
    ENVIRONMENT: dev
  before_script:
    - mkdir /root/.aws
    - echo ${AWS_CONFIG} | base64 -d > /root/.aws/config
    - echo ${AWS_CREDENTIALS} | base64 -d > /root/.aws/credentials
  script:
    - ${CI_PROJECT_DIR}/deployment/scripts/deploy-application.sh -n ${CI_PROJECT_NAME}-frontend -c ${CI_PROJECT_DIR}/deployment/frontend -f ${CI_PROJECT_DIR}/deployment/frontend/values-ci.yaml -o ${CI_PROJECT_DIR}/deployment/values.yaml
    - kubectl rollout restart -n ${ENVIRONMENT} deployment ${CI_PROJECT_NAME}-frontend-deployment
include:
  - template: Security/SAST-IaC.latest.gitlab-ci.yml
  - template: Secret-Detection.gitlab-ci.yml
